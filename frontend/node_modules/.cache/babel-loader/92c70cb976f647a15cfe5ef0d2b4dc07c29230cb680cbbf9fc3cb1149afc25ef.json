{"ast":null,"code":"var _jsxFileName = \"D:\\\\TUGAS\\\\Tugas\\\\SI\\\\16-4-task-management\\\\frontend\\\\src\\\\views\\\\admin\\\\Upcoming.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"../../components/Board/Board.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Upcoming() {\n  _s();\n  const [boards, setBoards] = useState(JSON.parse(localStorage.getItem(\"prac-kanban\")) || []);\n  const addCardHandler = (boardId, cardTitle) => {\n    const updatedBoards = boards.map(board => {\n      if (board.id === boardId) {\n        board.cards.push({\n          id: Date.now() + Math.random() * 2,\n          title: cardTitle,\n          labels: [],\n          date: \"\",\n          tasks: []\n        });\n      }\n      return board;\n    });\n    setBoards(updatedBoards);\n  };\n  const removeBoard = boardId => {\n    const updatedBoards = boards.filter(board => board.id !== boardId);\n    setBoards(updatedBoards);\n  };\n  const removeCard = (boardId, cardId) => {\n    const updatedBoards = boards.map(board => {\n      if (board.id === boardId) {\n        board.cards = board.cards.filter(card => card.id !== cardId);\n      }\n      return board;\n    });\n    setBoards(updatedBoards);\n  };\n  const dragEntered = (boardId, cardId) => {\n    // Implement logic for drag entered\n  };\n  const dragEnded = (boardId, cardId) => {\n    // Implement logic for drag ended\n  };\n  const updateCard = (boardId, cardId, updatedCard) => {\n    const updatedBoards = boards.map(board => {\n      if (board.id === boardId) {\n        board.cards = board.cards.map(card => card.id === cardId ? updatedCard : card);\n      }\n      return board;\n    });\n    setBoards(updatedBoards);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full mb-12 px-4\",\n        children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n          board: board,\n          addCard: addCardHandler,\n          removeBoard: () => removeBoard(board.id),\n          removeCard: removeCard,\n          dragEntered: dragEntered,\n          dragEnded: dragEnded,\n          updateCard: updateCard\n        }, board.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Upcoming, \"Yg7zvSAUsN8fmfpPCNvGKIsTxwc=\");\n_c = Upcoming;\nvar _c;\n$RefreshReg$(_c, \"Upcoming\");","map":{"version":3,"names":["React","useState","useEffect","Board","jsxDEV","_jsxDEV","Fragment","_Fragment","Upcoming","_s","boards","setBoards","JSON","parse","localStorage","getItem","addCardHandler","boardId","cardTitle","updatedBoards","map","board","id","cards","push","Date","now","Math","random","title","labels","date","tasks","removeBoard","filter","removeCard","cardId","card","dragEntered","dragEnded","updateCard","updatedCard","setItem","stringify","children","className","addCard","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/TUGAS/Tugas/SI/16-4-task-management/frontend/src/views/admin/Upcoming.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Board from \"../../components/Board/Board.js\";\r\n\r\nexport default function Upcoming() {\r\n  const [boards, setBoards] = useState(\r\n    JSON.parse(localStorage.getItem(\"prac-kanban\")) || []\r\n  );\r\n\r\n  const addCardHandler = (boardId, cardTitle) => {\r\n    const updatedBoards = boards.map((board) => {\r\n      if (board.id === boardId) {\r\n        board.cards.push({\r\n          id: Date.now() + Math.random() * 2,\r\n          title: cardTitle,\r\n          labels: [],\r\n          date: \"\",\r\n          tasks: [],\r\n        });\r\n      }\r\n      return board;\r\n    });\r\n    setBoards(updatedBoards);\r\n  };\r\n\r\n  const removeBoard = (boardId) => {\r\n    const updatedBoards = boards.filter((board) => board.id !== boardId);\r\n    setBoards(updatedBoards);\r\n  };\r\n\r\n  const removeCard = (boardId, cardId) => {\r\n    const updatedBoards = boards.map((board) => {\r\n      if (board.id === boardId) {\r\n        board.cards = board.cards.filter((card) => card.id !== cardId);\r\n      }\r\n      return board;\r\n    });\r\n    setBoards(updatedBoards);\r\n  };\r\n\r\n  const dragEntered = (boardId, cardId) => {\r\n    // Implement logic for drag entered\r\n  };\r\n\r\n  const dragEnded = (boardId, cardId) => {\r\n    // Implement logic for drag ended\r\n  };\r\n\r\n  const updateCard = (boardId, cardId, updatedCard) => {\r\n    const updatedBoards = boards.map((board) => {\r\n      if (board.id === boardId) {\r\n        board.cards = board.cards.map((card) =>\r\n          card.id === cardId ? updatedCard : card\r\n        );\r\n      }\r\n      return board;\r\n    });\r\n    setBoards(updatedBoards);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\r\n  }, [boards]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-wrap mt-4\">\r\n        <div className=\"w-full mb-12 px-4\">\r\n          {boards.map((board) => (\r\n            <Board\r\n              key={board.id}\r\n              board={board}\r\n              addCard={addCardHandler}\r\n              removeBoard={() => removeBoard(board.id)}\r\n              removeCard={removeCard}\r\n              dragEntered={dragEntered}\r\n              dragEnded={dragEnded}\r\n              updateCard={updateCard}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}